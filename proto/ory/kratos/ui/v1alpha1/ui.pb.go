// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: ory/kratos/ui/v1alpha1/ui.proto

package ui

import (
	_ "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message_Type int32

const (
	Message_TYPE_UNSPECIFIED Message_Type = 0
	Message_TYPE_INFO        Message_Type = 1
	Message_TYPE_ERROR       Message_Type = 2
)

// Enum value maps for Message_Type.
var (
	Message_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_INFO",
		2: "TYPE_ERROR",
	}
	Message_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_INFO":        1,
		"TYPE_ERROR":       2,
	}
)

func (x Message_Type) Enum() *Message_Type {
	p := new(Message_Type)
	*p = x
	return p
}

func (x Message_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_ory_kratos_ui_v1alpha1_ui_proto_enumTypes[0].Descriptor()
}

func (Message_Type) Type() protoreflect.EnumType {
	return &file_ory_kratos_ui_v1alpha1_ui_proto_enumTypes[0]
}

func (x Message_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_Type.Descriptor instead.
func (Message_Type) EnumDescriptor() ([]byte, []int) {
	return file_ory_kratos_ui_v1alpha1_ui_proto_rawDescGZIP(), []int{0, 0}
}

type Node_Type int32

const (
	// The default type is not valid.
	Node_TYPE_UNSPECIFIED Node_Type = 0
	// A text node.
	Node_TYPE_TEXT Node_Type = 1
	// An input node.
	Node_TYPE_INPUT Node_Type = 2
	// An image node.
	Node_TYPE_IMAGE Node_Type = 3
	// An anchore node.
	Node_TYPE_ANCHOR Node_Type = 4
)

// Enum value maps for Node_Type.
var (
	Node_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_TEXT",
		2: "TYPE_INPUT",
		3: "TYPE_IMAGE",
		4: "TYPE_ANCHOR",
	}
	Node_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_TEXT":        1,
		"TYPE_INPUT":       2,
		"TYPE_IMAGE":       3,
		"TYPE_ANCHOR":      4,
	}
)

func (x Node_Type) Enum() *Node_Type {
	p := new(Node_Type)
	*p = x
	return p
}

func (x Node_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Node_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_ory_kratos_ui_v1alpha1_ui_proto_enumTypes[1].Descriptor()
}

func (Node_Type) Type() protoreflect.EnumType {
	return &file_ory_kratos_ui_v1alpha1_ui_proto_enumTypes[1]
}

func (x Node_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Node_Type.Descriptor instead.
func (Node_Type) EnumDescriptor() ([]byte, []int) {
	return file_ory_kratos_ui_v1alpha1_ui_proto_rawDescGZIP(), []int{1, 0}
}

type Node_Group int32

const (
	Node_GROUP_UNSPECIFIED Node_Group = 0
	// The default group contains things such as the csrf_token.
	Node_GROUP_DEFAULT Node_Group = 1
	// The password group contains elements from the password authenticator.
	Node_GROUP_PASSWORD Node_Group = 2
	// The oidc group contains nodes from the OpenID Connect authenticator.
	Node_GROUP_OIDC              Node_Group = 3
	Node_GROUP_RECOVERY_LINK     Node_Group = 4
	Node_GROUP_VERIFICATION_LINK Node_Group = 5
)

// Enum value maps for Node_Group.
var (
	Node_Group_name = map[int32]string{
		0: "GROUP_UNSPECIFIED",
		1: "GROUP_DEFAULT",
		2: "GROUP_PASSWORD",
		3: "GROUP_OIDC",
		4: "GROUP_RECOVERY_LINK",
		5: "GROUP_VERIFICATION_LINK",
	}
	Node_Group_value = map[string]int32{
		"GROUP_UNSPECIFIED":       0,
		"GROUP_DEFAULT":           1,
		"GROUP_PASSWORD":          2,
		"GROUP_OIDC":              3,
		"GROUP_RECOVERY_LINK":     4,
		"GROUP_VERIFICATION_LINK": 5,
	}
)

func (x Node_Group) Enum() *Node_Group {
	p := new(Node_Group)
	*p = x
	return p
}

func (x Node_Group) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Node_Group) Descriptor() protoreflect.EnumDescriptor {
	return file_ory_kratos_ui_v1alpha1_ui_proto_enumTypes[2].Descriptor()
}

func (Node_Group) Type() protoreflect.EnumType {
	return &file_ory_kratos_ui_v1alpha1_ui_proto_enumTypes[2]
}

func (x Node_Group) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Node_Group.Descriptor instead.
func (Node_Group) EnumDescriptor() ([]byte, []int) {
	return file_ory_kratos_ui_v1alpha1_ui_proto_rawDescGZIP(), []int{1, 1}
}

//
// Represents a message in the UI.
//
// A message can be be a validation error, a system error, or some other type of informative text.
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the message.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The text of the message.
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// The type of the message.
	Type Message_Type `protobuf:"varint,3,opt,name=type,proto3,enum=ory.kratos.ui.v1alpha1.Message_Type" json:"type,omitempty"`
	// The context of the message, encoded as JSON.
	Context string `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_ory_kratos_ui_v1alpha1_ui_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Message) GetType() Message_Type {
	if x != nil {
		return x.Type
	}
	return Message_TYPE_UNSPECIFIED
}

func (x *Message) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

//
// Node represents a flow's nodes.
//
// Nodes are represented as HTML elements or their native UI equivalents. For example,
// a node can be an `<img>` tag, or an `<input element>` but also `some plain text`.
type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The node's type.
	Type Node_Type `protobuf:"varint,1,opt,name=type,proto3,enum=ory.kratos.ui.v1alpha1.Node_Type" json:"type,omitempty"`
	// Group specifies which group (e.g. password, social sign in, ...) this node belongs to.
	Group Node_Group `protobuf:"varint,2,opt,name=group,proto3,enum=ory.kratos.ui.v1alpha1.Node_Group" json:"group,omitempty"`
	// Contains error, validation, or other messages relevant for this node.
	Messages *Message `protobuf:"bytes,4,opt,name=messages,proto3" json:"messages,omitempty"`
	// Types that are assignable to Attributes:
	//	*Node_Input
	//	*Node_Text
	Attributes isNode_Attributes `protobuf_oneof:"attributes"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_ory_kratos_ui_v1alpha1_ui_proto_rawDescGZIP(), []int{1}
}

func (x *Node) GetType() Node_Type {
	if x != nil {
		return x.Type
	}
	return Node_TYPE_UNSPECIFIED
}

func (x *Node) GetGroup() Node_Group {
	if x != nil {
		return x.Group
	}
	return Node_GROUP_UNSPECIFIED
}

func (x *Node) GetMessages() *Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (m *Node) GetAttributes() isNode_Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (x *Node) GetInput() *NodeAttributesInput {
	if x, ok := x.GetAttributes().(*Node_Input); ok {
		return x.Input
	}
	return nil
}

func (x *Node) GetText() *NodeAttributesInput {
	if x, ok := x.GetAttributes().(*Node_Text); ok {
		return x.Text
	}
	return nil
}

type isNode_Attributes interface {
	isNode_Attributes()
}

type Node_Input struct {
	Input *NodeAttributesInput `protobuf:"bytes,5,opt,name=input,proto3,oneof"`
}

type Node_Text struct {
	Text *NodeAttributesInput `protobuf:"bytes,6,opt,name=text,proto3,oneof"`
}

func (*Node_Input) isNode_Attributes() {}

func (*Node_Text) isNode_Attributes() {}

type NodeAttributesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The input's element name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The input's element type.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// The input's value. Must be a primitive value (empty, int, float, string, bool).
	//
	// Types that are assignable to Value:
	//	*NodeAttributesInput_ValueString
	//	*NodeAttributesInput_ValueNumber
	//	*NodeAttributesInput_ValueBool
	Value isNodeAttributesInput_Value `protobuf_oneof:"value"`
	// Marks this input field as required.
	Required bool `protobuf:"varint,4,opt,name=required,proto3" json:"required,omitempty"`
	// The input's label text.
	Label *Message `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
	// The input's pattern.
	Pattern string `protobuf:"bytes,6,opt,name=pattern,proto3" json:"pattern,omitempty"`
	// Sets the input's disabled field to true or false.
	Disabled bool `protobuf:"varint,7,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *NodeAttributesInput) Reset() {
	*x = NodeAttributesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAttributesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAttributesInput) ProtoMessage() {}

func (x *NodeAttributesInput) ProtoReflect() protoreflect.Message {
	mi := &file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAttributesInput.ProtoReflect.Descriptor instead.
func (*NodeAttributesInput) Descriptor() ([]byte, []int) {
	return file_ory_kratos_ui_v1alpha1_ui_proto_rawDescGZIP(), []int{2}
}

func (x *NodeAttributesInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeAttributesInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (m *NodeAttributesInput) GetValue() isNodeAttributesInput_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *NodeAttributesInput) GetValueString() string {
	if x, ok := x.GetValue().(*NodeAttributesInput_ValueString); ok {
		return x.ValueString
	}
	return ""
}

func (x *NodeAttributesInput) GetValueNumber() float32 {
	if x, ok := x.GetValue().(*NodeAttributesInput_ValueNumber); ok {
		return x.ValueNumber
	}
	return 0
}

func (x *NodeAttributesInput) GetValueBool() bool {
	if x, ok := x.GetValue().(*NodeAttributesInput_ValueBool); ok {
		return x.ValueBool
	}
	return false
}

func (x *NodeAttributesInput) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *NodeAttributesInput) GetLabel() *Message {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *NodeAttributesInput) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *NodeAttributesInput) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type isNodeAttributesInput_Value interface {
	isNodeAttributesInput_Value()
}

type NodeAttributesInput_ValueString struct {
	ValueString string `protobuf:"bytes,8,opt,name=value_string,json=valueString,proto3,oneof"`
}

type NodeAttributesInput_ValueNumber struct {
	ValueNumber float32 `protobuf:"fixed32,9,opt,name=value_number,json=valueNumber,proto3,oneof"`
}

type NodeAttributesInput_ValueBool struct {
	ValueBool bool `protobuf:"varint,10,opt,name=value_bool,json=valueBool,proto3,oneof"`
}

func (*NodeAttributesInput_ValueString) isNodeAttributesInput_Value() {}

func (*NodeAttributesInput_ValueNumber) isNodeAttributesInput_Value() {}

func (*NodeAttributesInput_ValueBool) isNodeAttributesInput_Value() {}

type NodeAttributesText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The text.
	Text *Message `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *NodeAttributesText) Reset() {
	*x = NodeAttributesText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAttributesText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAttributesText) ProtoMessage() {}

func (x *NodeAttributesText) ProtoReflect() protoreflect.Message {
	mi := &file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAttributesText.ProtoReflect.Descriptor instead.
func (*NodeAttributesText) Descriptor() ([]byte, []int) {
	return file_ory_kratos_ui_v1alpha1_ui_proto_rawDescGZIP(), []int{3}
}

func (x *NodeAttributesText) GetText() *Message {
	if x != nil {
		return x.Text
	}
	return nil
}

var File_ory_kratos_ui_v1alpha1_ui_proto protoreflect.FileDescriptor

var file_ory_kratos_ui_v1alpha1_ui_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6f, 0x72, 0x79, 0x2f, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2f, 0x75, 0x69, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x16, 0x6f, 0x72, 0x79, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x75, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6f, 0x72, 0x79, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e,
	0x75, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0xb6, 0x04, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x35,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6f,
	0x72, 0x79, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x75, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6f, 0x72, 0x79, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f,
	0x73, 0x2e, 0x75, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x3b, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x72, 0x79, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x75,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x05,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x72,
	0x79, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x75, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6f, 0x72, 0x79, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x75, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x5c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10,
	0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4e, 0x43, 0x48, 0x4f, 0x52,
	0x10, 0x04, 0x22, 0x8b, 0x01, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x15, 0x0a, 0x11,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x44, 0x45, 0x46,
	0x41, 0x55, 0x4c, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f,
	0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x5f, 0x4f, 0x49, 0x44, 0x43, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x4e,
	0x4b, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x56, 0x45, 0x52,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x05,
	0x42, 0x0c, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xba,
	0x02, 0x0a, 0x13, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0b, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x72, 0x79, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f,
	0x73, 0x2e, 0x75, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x49, 0x0a, 0x12, 0x4e,
	0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6f, 0x72, 0x79, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x75, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x72, 0x79, 0x2f, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2f, 0x75, 0x69, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x75, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_ory_kratos_ui_v1alpha1_ui_proto_rawDescOnce sync.Once
	file_ory_kratos_ui_v1alpha1_ui_proto_rawDescData = file_ory_kratos_ui_v1alpha1_ui_proto_rawDesc
)

func file_ory_kratos_ui_v1alpha1_ui_proto_rawDescGZIP() []byte {
	file_ory_kratos_ui_v1alpha1_ui_proto_rawDescOnce.Do(func() {
		file_ory_kratos_ui_v1alpha1_ui_proto_rawDescData = protoimpl.X.CompressGZIP(file_ory_kratos_ui_v1alpha1_ui_proto_rawDescData)
	})
	return file_ory_kratos_ui_v1alpha1_ui_proto_rawDescData
}

var file_ory_kratos_ui_v1alpha1_ui_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ory_kratos_ui_v1alpha1_ui_proto_goTypes = []interface{}{
	(Message_Type)(0),           // 0: ory.kratos.ui.v1alpha1.Message.Type
	(Node_Type)(0),              // 1: ory.kratos.ui.v1alpha1.Node.Type
	(Node_Group)(0),             // 2: ory.kratos.ui.v1alpha1.Node.Group
	(*Message)(nil),             // 3: ory.kratos.ui.v1alpha1.Message
	(*Node)(nil),                // 4: ory.kratos.ui.v1alpha1.Node
	(*NodeAttributesInput)(nil), // 5: ory.kratos.ui.v1alpha1.NodeAttributesInput
	(*NodeAttributesText)(nil),  // 6: ory.kratos.ui.v1alpha1.NodeAttributesText
}
var file_ory_kratos_ui_v1alpha1_ui_proto_depIdxs = []int32{
	0, // 0: ory.kratos.ui.v1alpha1.Message.type:type_name -> ory.kratos.ui.v1alpha1.Message.Type
	1, // 1: ory.kratos.ui.v1alpha1.Node.type:type_name -> ory.kratos.ui.v1alpha1.Node.Type
	2, // 2: ory.kratos.ui.v1alpha1.Node.group:type_name -> ory.kratos.ui.v1alpha1.Node.Group
	3, // 3: ory.kratos.ui.v1alpha1.Node.messages:type_name -> ory.kratos.ui.v1alpha1.Message
	5, // 4: ory.kratos.ui.v1alpha1.Node.input:type_name -> ory.kratos.ui.v1alpha1.NodeAttributesInput
	5, // 5: ory.kratos.ui.v1alpha1.Node.text:type_name -> ory.kratos.ui.v1alpha1.NodeAttributesInput
	3, // 6: ory.kratos.ui.v1alpha1.NodeAttributesInput.label:type_name -> ory.kratos.ui.v1alpha1.Message
	3, // 7: ory.kratos.ui.v1alpha1.NodeAttributesText.text:type_name -> ory.kratos.ui.v1alpha1.Message
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_ory_kratos_ui_v1alpha1_ui_proto_init() }
func file_ory_kratos_ui_v1alpha1_ui_proto_init() {
	if File_ory_kratos_ui_v1alpha1_ui_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAttributesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAttributesText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Node_Input)(nil),
		(*Node_Text)(nil),
	}
	file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*NodeAttributesInput_ValueString)(nil),
		(*NodeAttributesInput_ValueNumber)(nil),
		(*NodeAttributesInput_ValueBool)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ory_kratos_ui_v1alpha1_ui_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ory_kratos_ui_v1alpha1_ui_proto_goTypes,
		DependencyIndexes: file_ory_kratos_ui_v1alpha1_ui_proto_depIdxs,
		EnumInfos:         file_ory_kratos_ui_v1alpha1_ui_proto_enumTypes,
		MessageInfos:      file_ory_kratos_ui_v1alpha1_ui_proto_msgTypes,
	}.Build()
	File_ory_kratos_ui_v1alpha1_ui_proto = out.File
	file_ory_kratos_ui_v1alpha1_ui_proto_rawDesc = nil
	file_ory_kratos_ui_v1alpha1_ui_proto_goTypes = nil
	file_ory_kratos_ui_v1alpha1_ui_proto_depIdxs = nil
}
